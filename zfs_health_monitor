#!/bin/bash

# Script to watch the health of zpools, for non-failure related errors

date="$(date)"
pools=($(zpool list | grep -v NAME | awk '{print $1}'))
admin_email=

# Capacity Checker
used=($(zpool list | grep -v NAME | awk '{print $7}' | cut -d'%' -f1))
count=0
for amount in "${used[@]}"
do
	if [ $amount -ge 90 ]; then
		echo $date Pool: ${pools[$count]} Capacity Alert >> /var/log/zfs.log
		count=$((count+1))
		echo Pool: ${pools[$count]} has reached 90% capacity | mail -s "ZFS Capacity Alert" $admin_email
	else
		echo $date Pool: ${pools[$count]} Below Alert Capcity Level >> /var/log/zfs.log
		count=$((count+1))
	fi
done

# Error Checker
for pool in "${pools[@]}"
do
	flag=0
	error_counts=($(zpool status $pool | sed -n -e '/NAME/,$p' | grep -v NAME | awk '{print $3$4$5}' | grep -v -e '^$' | grep -v known))

	for v in "${error_counts[@]}"
	do
		if [ $v -ne 000 ]; then
			flag=1
		else
			echo no change > /dev/null
		fi
	done
	if [ $flag -eq "1" ]; then
		echo $date Errors found in pool $pool >> /var/log/zfs.log
		/usr/sbin/zpool status | mail -s "ZFS Error Alert" $admin_email
	else
		echo $date No Errors found in pool $pool >> /var/log/zfs.log
	fi
done

# Temperature Checker
drives=($(lsscsi | grep ATA | awk '{print $6}'))
error=0
for d in ${drives[@]}
do
	temp=$(hddtemp $d | awk '{print $3}' | cut -c -2)
	if [ $temp -lt 46 ]; then
		echo Drive good > /dev/null
	elif [ $temp -gt 45 ]; then
		id=$(udevadm info --query=property $d | grep ID_PATH= | cut -d"=" -f2)
                name=$(cat /etc/zfs/vdev.conf | grep $id | awk '{print $2}')
                echo Drive $name Temperature over 45C, please check immidiately | mail -s "Drive Temperature Alert" $admin_email
                echo Drive $name Temperature Alert ${temp}C >> /var/log/zfs.log
		error=$((error+1))
	else
		echo Error reading drive temp >> /var/log/zfs.log
	fi
	if [ $error -eq 0 ]; then
		echo All drive temps under threshold >> /var/log/zfs.log
	else
		echo Nope > /dev/null
	fi
done
