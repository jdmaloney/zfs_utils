#!/bin/bash

# Script to monitor zpools for faulted disks, alert admin on failure and activate drive fault LED
# Upon initial zpool creation, create file containing drive-to-serial map using zfs drive mapper util

this_script=/root/zfs/zfs_fault_finder
map_path=/root/disk_map
fail_path=/root/failed_disks
enclosure_mapper_path=/root/zfs/zfs_enclosure_mapper
admin_email=
date="$(date)"
status="$(/usr/sbin/zpool status -x)"
zfs_status=($(cat /tmp/zfs_status))

if [ "$status" == "all pools are healthy" ]; then
	echo $date All zpools are Healthy >> /var/log/zfs.log
	if [ $zfs_status == "REBUILDING" ]; then
		/usr/sbin/zpool status | mail -s "ZFS Rebuild Complete" $admin_email
		echo $date ZFS Rebuild Complete >> /var/log/zfs.log
		rm -rf /tmp/zfs_rebuilding
	fi
	echo HEALTHY > /tmp/zfs_status
elif [ $zfs_status == "HEALTHY" ] || [ $zfs_status == "DEGRADED" ]; then
	rm -rf $fail_path
	dev=($(/usr/sbin/zpool status | egrep 'OFFLINE|UNAVAIL|FAULTED|DEGRADED|REMOVED' | grep En | awk '{print $1}'))
	if [ -z $dev ]; then
		echo Let Health Fix > /dev/null
	else
		echo DEGRADED > /tmp/zfs_status
		for d in "${dev[@]}"
		do
			id=$(cat /etc/zfs/vdev_id.conf | grep $d | awk '{print $3}' | cut -d'/' -f5)
			enclosure=$(echo $d | cut -c 3- | cut -d'_' -f1)
			slot=$(echo $d | cut -d'_' -f3 | cut -c 3-)
			backplane=$(cat $map_path | grep $id | awk '{print $2}')
			echo $d >> $fail_path
			echo 1 > /sys/class/enclosure/$backplane/"Slot $slot"/fault
			echo $date Error in enclosure: $enclosure, Slot: $slot >> /var/log/zfs.log
			$enclosure_mapper_path $backplane $slot > /root/fail_map
			cat /root/fail_map | mail -s "ZFS Drive Failure: Enclosure $enclosure Slot: $slot" $admin_email
			rm -rf /root/fail_map
		done
	fi
elif [ $zfs_status == "REBUILDING" ]; then
	dev=($(/usr/sbin/zpool status | egrep 'OFFLINE|UNAVAIL|FAULTED|DEGRADED|REMOVED' | grep En | awk '{print $1}'))
	for d in ${dev[@]}
	do
		match=$(cat /tmp/zfs_rebuilding | grep $d)
		if [ -z $match ]; then
			newfail+=$d
		else
			echo Already Know > /dev/null
		fi
	done
	if [ -z $newfail ]; then
		/usr/sbin/zpool status | mail -s "ZFS Rebuild Status" $admin_email
	else
		echo DEGRADED > /tmp/zfs_status
		for d in "${newfail[@]}"
        	do
			id=$(cat /etc/zfs/vdev_id.conf | grep $d | awk '{print $3}' | cut -d'/' -f5)
                	enclosure=$(echo $d | cut -c 3- | cut -d'_' -f1)
                        slot=$(echo $d | cut -d'_' -f3 | cut -c 3-)
			backplane=$(cat $map_path | grep $id | awk '{print $2}')
			echo $d >> $fail_path
                	echo 1 > /sys/class/enclosure/$backplane/"Slot $slot"/fault
                	echo $date Error in enclosure: $enclosure, Slot: $slot >> /var/log/zfs.log
                	$enclosure_mapper_path $backplane $slot > /root/fail_map
                	cat /root/fail_map | mail -s "ZFS Drive Failure: Enclosure $enclosure Slot: $slot" $admin_email
        		rm -rf /root/fail_map
		done
	fi
else
	echo Error Getting Zpool State | mail -s "ZFS Analysis Error" $admin_email
fi
